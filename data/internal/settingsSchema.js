'use strict';
const {
    SchemaModel: R,
    StringType: q,
    NumberType: C,
    BooleanType: y
} = require('schema-typed');
module.exports = R({
    'enabled': y().isRequired(),
    'useTestFeatures': y().isRequired(),
    'additionalCombatFixes': y().isRequired(),
    'defaultPingValue': C().isRequired().range(-1, 300),
    'fastCastSkillsCalibrationTime': C().isRequired().range(0, 30),
    'jitterCompensation': y().isRequired(),
    'jitterCompensationChargesMax': C().isRequired().range(0, 100),
    'jitterCompensationChargesMin': C().isRequired().range(0, 100),
    'jitterCompensationChargesApplyAverage': y().isRequired(),
    'jitterCompensationMax': C().isRequired().range(0, 70),
    'jitterCompensationMin': C().isRequired().range(0, 70),
    'jitterCompensationApplyAverage': y().isRequired(),
    'resyncReactions': y().isRequired(),
    'resyncZ': y().isRequired(),
    'advancedAbnormals': y().isRequired(),
    'advancedCooldowns': y().isRequired(),
    'advancedProjectiles': y().isRequired(),
    'advancedCC': y().isRequired(),
    'skillRetryCount': C().isRequired().range(0, 4),
    'skillRetryMs': C().isRequired().range(20, 35),
    'backstabsResync': y().isRequired(),
    'backstabsSpoof': y().isRequired(),
    'serverTimeout': C().isRequired().range(100, 10000),
    'debugGlyphs': y().isRequired(),
    'debug': y().isRequired(),
    'debugAbnormals': y().isRequired(),
    'debugCooldowns': y().isRequired(),
    'debugTalents': y().isRequired(),
    'debugItems': y().isRequired(),
    'debugPolishing': y().isRequired(),
    'debugLoc': y().isRequired(),
    'version': q().isRequired(),
    'pingMethod': q().isRequired().isOneOf(['hybrid', 'internal', 'external', 'static']),
    'language': q().isRequired(),
    'ingameUIPing': q().isRequired().isOneOf(['avg', 'min', 'fake', 'none']),
    'pingHistoryMax': C().isRequired().range(10, 150),
    'pingHelperTimeout': C().isRequired(),
    'shortcutEnable': q().isRequiredOrEmpty(),
    'shortcutUISettings': q().isRequiredOrEmpty(),
    'shortcutUIPing': q().isRequiredOrEmpty(),
    'customCommandPrefix': q().isRequiredOrEmpty()
});
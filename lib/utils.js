"use strict";const fs=require("fs"),path=require("path"),fsAsync=require("fs").promises,util=require("util"),zlib=require("zlib"),inflate=util.promisify(zlib.inflateRaw),getQuantile=(e,t,r=!1)=>{let n=Object.assign([],e);if(n=r?n:n.sort((e,t)=>e-t),0===t)return n[0];if(1===t)return n[n.length-1];{let e=n.length*t;return e%1?n[Math.floor(e)]:n.length%2?n[e]:(n[e-1]+n[e])/2}},getFlatArray=e=>e.reduce((e,t)=>e.concat(Array.isArray(t)?getFlatArray(t):t),[]);exports.getStatsFromArray=((e,t=.1,r=.5,n=.9)=>({minValue:getQuantile(e,t),avgValue:getQuantile(e,r),maxValue:getQuantile(e,n)})),exports.getMapFromArray=(e=>e.reduce((e,t)=>(e[t]=!0,e),{})),exports.getFlatArray=getFlatArray,exports.getDataFromObjectByField=((e,t)=>{return function(e,t=[]){const r=[];return"object"==typeof e&&null!=e&&function e(t,r,n,s,l,a){for(let o=0,i=Object.keys(s),u=i.length;o<u;++o){const u=i[o],c=s[u];if(n[n.length]=String(u),"object"==typeof c){if(null!=c&&!~t.indexOf(c)){t[t.length]=c;try{e(t,r,n,c,l,a)}catch(e){}}~a.indexOf(u)&&(l[l.length]=Object.keys(c)),--n.length}}}([e],[],[],e,r,t),r}(e,t)}),exports.arraysIntersect=((e,t)=>{let r=[];for(const n of e)-1!=t.indexOf(n)&&r.push(n);return r}),exports.isExist=(e=>fs.existsSync(e)),exports.arraysHasIntersect=((e,t)=>{let r=Array.isArray(e)?e:[e];for(const e of r)if(-1!=t.indexOf(e))return!0;return!1}),exports.getSafe=((e,t,r)=>{if(void 0===e||0===t.length)return r;let n=e;for(const e of t)if(null==(n=n[e]))return r;return n}),exports.getQuantile=getQuantile,exports.splitString=(e=>e.trim().toLowerCase().split(" ")),exports.loadJson=(e=>{try{return JSON.parse(fs.readFileSync(e,"utf8"))}catch(e){return null}}),exports.requireUncached=(e=>{delete require.cache[require.resolve(e)];try{return require(e)}catch{return!1}}),exports.safeRequire=(e=>{try{return require(e)}catch(e){return!1}}),exports.loadJsonAsync=(async e=>{let t=null;try{t=await fsAsync.readFile(e,"utf8")}catch(e){}return t&&(t=JSON.parse(t)),t}),exports.getJsonWithUnpack=(async e=>{let t=null;try{t=(t=await inflate(e)).toString()}catch(e){}return t&&(t=JSON.parse(t)),t}),exports.loadBufferAsync=(async e=>{let t=null;try{t=await fsAsync.readFile(e)}catch(e){}return t}),exports.getFullPath=((e,t)=>path.resolve(e,t)),exports.saveJson=((e,t)=>{try{fs.writeFileSync(t,JSON.stringify(e,null,"\t"))}catch(e){return!1}}),exports.compareFieldInObjects=((e,t,r)=>e[r]===t[r]),exports.compareFieldsInObjects=((e,t)=>{let r={};for(let[n,s]of Object.entries(t))e[n]&&e[n]===s||(r[n]=s);return Object.keys(r).length>0?r:null}),exports.removeFileSync=(e=>{fs.unlinkSync(e)}),exports.removeByPath=(e=>{try{if(fs.lstatSync(e).isDirectory()){for(let t in fs.readdirSync(e))fs.unlinkSync(t);fs.rmdirSync(e)}else fs.unlinkSync(e)}catch(e){return null}}),exports.degrees=(e=>`${Math.round(e/Math.PI*180)}Â°`),exports.decimal=((e,t)=>{let r=Math.pow(10,t);return Math.round(e*r)/r}),exports.getSkillBase=(e=>Math.floor(e/1e4)),exports.getSkillLevel=(e=>Math.floor(e/100)%100-1),exports.getSkillSub=(e=>e%100),exports.getRaceFromTemplateId=(e=>Math.floor((e-10101)/100)),exports.getJobFromTemplateId=(e=>(e-10101)%100),exports.arraysIntersect=((e,t)=>{let r=[];for(const n of e)-1!=t.indexOf(n)&&r.push(n);return r});